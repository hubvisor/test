[{"sha":"3728e6a255b50382591ee374c70e6f5276a47d0a","commit":{"message":"Merge tag 'media/v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media\n\nPull media fixes from Mauro Carvalho Chehab:\n \"Core fixes:\n   - cec: Respond to unregistered initiators, when applicable\n   - dvb_frontend: only use kref after initialized\n\n  Driver-specific fixes:\n   - qcom, camss: Make function vfe_set_selection static\n   - qcom: VIDEO_QCOM_CAMSS should depend on HAS_DMA\n   - s5p-cec: add NACK detection support\n   - media: staging/imx: Fix uninitialized variable warning\n   - dib3000mc: i2c transfers over usb cannot be done from stack\n   - venus: init registered list on streamoff\"\n\n* tag 'media/v4.14-2' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media:\n  media: dvb_frontend: only use kref after initialized\n  media: platform: VIDEO_QCOM_CAMSS should depend on HAS_DMA\n  media: cec: Respond to unregistered initiators, when applicable\n  media: s5p-cec: add NACK detection support\n  media: staging/imx: Fix uninitialized variable warning\n  media: qcom: camss: Make function vfe_set_selection static\n  media: venus: init registered list on streamoff\n  media: dvb: i2c transfers over usb cannot be done from stack","tree":{"sha":"ebe173453c86340db16e2643765f9072668a803e","url":"https://api.github.com/repos/torvalds/linux/git/trees/ebe173453c86340db16e2643765f9072668a803e"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/3728e6a255b50382591ee374c70e6f5276a47d0a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/3728e6a255b50382591ee374c70e6f5276a47d0a","html_url":"https://github.com/torvalds/linux/commit/3728e6a255b50382591ee374c70e6f5276a47d0a","comments_url":"https://api.github.com/repos/torvalds/linux/commits/3728e6a255b50382591ee374c70e6f5276a47d0a/comments","author":"1024025","committer":"1024025","parents":[{"sha":"33d930e59a98fa10a0db9f56c7fa2f21a4aef9b9","url":"https://api.github.com/repos/torvalds/linux/commits/33d930e59a98fa10a0db9f56c7fa2f21a4aef9b9","html_url":"https://github.com/torvalds/linux/commit/33d930e59a98fa10a0db9f56c7fa2f21a4aef9b9"},{"sha":"ead666000a5fe34bdc82d61838e4df2d416ea15e","url":"https://api.github.com/repos/torvalds/linux/commits/ead666000a5fe34bdc82d61838e4df2d416ea15e","html_url":"https://github.com/torvalds/linux/commit/ead666000a5fe34bdc82d61838e4df2d416ea15e"}]},{"sha":"33d930e59a98fa10a0db9f56c7fa2f21a4aef9b9","commit":{"message":"Linux 4.14-rc5","tree":{"sha":"be5c04a5eb313d8bab526241d2a3f5534bd71bf2","url":"https://api.github.com/repos/torvalds/linux/git/trees/be5c04a5eb313d8bab526241d2a3f5534bd71bf2"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/33d930e59a98fa10a0db9f56c7fa2f21a4aef9b9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/33d930e59a98fa10a0db9f56c7fa2f21a4aef9b9","html_url":"https://github.com/torvalds/linux/commit/33d930e59a98fa10a0db9f56c7fa2f21a4aef9b9","comments_url":"https://api.github.com/repos/torvalds/linux/commits/33d930e59a98fa10a0db9f56c7fa2f21a4aef9b9/comments","author":"1024025","committer":"1024025","parents":[{"sha":"ae7df8f985f1b0445366ae6f6324cd08a218526e","url":"https://api.github.com/repos/torvalds/linux/commits/ae7df8f985f1b0445366ae6f6324cd08a218526e","html_url":"https://github.com/torvalds/linux/commit/ae7df8f985f1b0445366ae6f6324cd08a218526e"}]},{"sha":"ae7df8f985f1b0445366ae6f6324cd08a218526e","commit":{"message":"Merge tag 'char-misc-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc driver fixes from Greg KH:\n \"Here are 4 patches to resolve some char/misc driver issues found these\n  past weeks.\n\n  One of them is a mei bugfix and another is a new mei device id. There\n  is also a hyper-v fix for a reported issue, and a binder issue fix for\n  a problem reported by a few people.\n\n  All of these have been in my tree for a while, I don't know if\n  linux-next is really testing much this month. But 0-day is happy with\n  them :)\"\n\n* tag 'char-misc-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  binder: fix use-after-free in binder_transaction()\n  Drivers: hv: vmbus: Fix bugs in rescind handling\n  mei: me: add gemini lake devices id\n  mei: always use domain runtime pm callbacks.","tree":{"sha":"7531517ec51cab79594fea13157f9a1a77d67d57","url":"https://api.github.com/repos/torvalds/linux/git/trees/7531517ec51cab79594fea13157f9a1a77d67d57"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/ae7df8f985f1b0445366ae6f6324cd08a218526e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/ae7df8f985f1b0445366ae6f6324cd08a218526e","html_url":"https://github.com/torvalds/linux/commit/ae7df8f985f1b0445366ae6f6324cd08a218526e","comments_url":"https://api.github.com/repos/torvalds/linux/commits/ae7df8f985f1b0445366ae6f6324cd08a218526e/comments","author":"1024025","committer":"1024025","parents":[{"sha":"7a263b16c5a258b2f3fe5b58a7c461cc9d34e99a","url":"https://api.github.com/repos/torvalds/linux/commits/7a263b16c5a258b2f3fe5b58a7c461cc9d34e99a","html_url":"https://github.com/torvalds/linux/commit/7a263b16c5a258b2f3fe5b58a7c461cc9d34e99a"},{"sha":"512cf465ee01eb23936a9e6ed0b6414eccb00853","url":"https://api.github.com/repos/torvalds/linux/commits/512cf465ee01eb23936a9e6ed0b6414eccb00853","html_url":"https://github.com/torvalds/linux/commit/512cf465ee01eb23936a9e6ed0b6414eccb00853"}]},{"sha":"7a263b16c5a258b2f3fe5b58a7c461cc9d34e99a","commit":{"message":"Merge tag 'usb-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are a handful of USB driver fixes for 4.14-rc5.\n\n  There is the \"usual\" usb-serial fixes and device ids, USB gadget\n  fixes, and some more fixes found by the fuzz testing that is happening\n  on the USB layer right now.\n\n  All of these have been in my tree this week with no reported issues\"\n\n* tag 'usb-4.14-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  usb: usbtest: fix NULL pointer dereference\n  usb: gadget: configfs: Fix memory leak of interface directory data\n  usb: gadget: composite: Fix use-after-free in usb_composite_overwrite_options\n  usb: misc: usbtest: Fix overflow in usbtest_do_ioctl()\n  usb: renesas_usbhs: Fix DMAC sequence for receiving zero-length packet\n  USB: dummy-hcd: Fix deadlock caused by disconnect detection\n  usb: phy: tegra: Fix phy suspend for UDC\n  USB: serial: console: fix use-after-free after failed setup\n  USB: serial: console: fix use-after-free on disconnect\n  USB: serial: qcserial: add Dell DW5818, DW5819\n  USB: serial: cp210x: add support for ELV TFD500\n  USB: serial: cp210x: fix partnum regression\n  USB: serial: option: add support for TP-Link LTE module\n  USB: serial: ftdi_sio: add id for Cypress WICED dev board","tree":{"sha":"f885b9ce93b686bacef1cf31930fc40e4de8d235","url":"https://api.github.com/repos/torvalds/linux/git/trees/f885b9ce93b686bacef1cf31930fc40e4de8d235"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/7a263b16c5a258b2f3fe5b58a7c461cc9d34e99a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/7a263b16c5a258b2f3fe5b58a7c461cc9d34e99a","html_url":"https://github.com/torvalds/linux/commit/7a263b16c5a258b2f3fe5b58a7c461cc9d34e99a","comments_url":"https://api.github.com/repos/torvalds/linux/commits/7a263b16c5a258b2f3fe5b58a7c461cc9d34e99a/comments","author":"1024025","committer":"1024025","parents":[{"sha":"7a23c5abb930cefcef85df6dc0c8fb3e8961980c","url":"https://api.github.com/repos/torvalds/linux/commits/7a23c5abb930cefcef85df6dc0c8fb3e8961980c","html_url":"https://github.com/torvalds/linux/commit/7a23c5abb930cefcef85df6dc0c8fb3e8961980c"},{"sha":"2d30408ecfd450c8377186615b330d329ded18ea","url":"https://api.github.com/repos/torvalds/linux/commits/2d30408ecfd450c8377186615b330d329ded18ea","html_url":"https://github.com/torvalds/linux/commit/2d30408ecfd450c8377186615b330d329ded18ea"}]},{"sha":"7a23c5abb930cefcef85df6dc0c8fb3e8961980c","commit":{"message":"Merge tag 'dmaengine-fix-4.14-rc5' of git://git.infradead.org/users/vkoul/slave-dma\n\nPull dmaengine fixes from Vinod Koul:\n \"Here are fixes for this round\n\n   - fix spinlock usage amd fifo response for altera driver\n\n   - fix ti crossbar race condition\n\n   - fix edma memcpy align\"\n\n* tag 'dmaengine-fix-4.14-rc5' of git://git.infradead.org/users/vkoul/slave-dma:\n  dmaengine: altera: fix spinlock usage\n  dmaengine: altera: fix response FIFO emptying\n  dmaengine: ti-dma-crossbar: Fix possible race condition with dma_inuse\n  dmaengine: edma: Align the memcpy acnt array size with the transfer","tree":{"sha":"2248f10da08a860b946c85b72faa97b64e0a087c","url":"https://api.github.com/repos/torvalds/linux/git/trees/2248f10da08a860b946c85b72faa97b64e0a087c"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/7a23c5abb930cefcef85df6dc0c8fb3e8961980c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/7a23c5abb930cefcef85df6dc0c8fb3e8961980c","html_url":"https://github.com/torvalds/linux/commit/7a23c5abb930cefcef85df6dc0c8fb3e8961980c","comments_url":"https://api.github.com/repos/torvalds/linux/commits/7a23c5abb930cefcef85df6dc0c8fb3e8961980c/comments","author":"1024025","committer":"1024025","parents":[{"sha":"e7a36a6ec9cf1b60273e48ee980b8920f333bd4d","url":"https://api.github.com/repos/torvalds/linux/commits/e7a36a6ec9cf1b60273e48ee980b8920f333bd4d","html_url":"https://github.com/torvalds/linux/commit/e7a36a6ec9cf1b60273e48ee980b8920f333bd4d"},{"sha":"edf10919e5fc8dfd10e57ed72f651204559bc6ba","url":"https://api.github.com/repos/torvalds/linux/commits/edf10919e5fc8dfd10e57ed72f651204559bc6ba","html_url":"https://github.com/torvalds/linux/commit/edf10919e5fc8dfd10e57ed72f651204559bc6ba"}]},{"sha":"e7a36a6ec9cf1b60273e48ee980b8920f333bd4d","commit":{"message":"Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Ingo Molnar:\n \"A landry list of fixes:\n\n   - fix reboot breakage on some PCID-enabled system\n\n   - fix crashes/hangs on some PCID-enabled systems\n\n   - fix microcode loading on certain older CPUs\n\n   - various unwinder fixes\n\n   - extend an APIC quirk to more hardware systems and disable APIC\n     related warning on virtualized systems\n\n   - various Hyper-V fixes\n\n   - a macro definition robustness fix\n\n   - remove jprobes IRQ disabling\n\n   - various mem-encryption fixes\"\n\n* 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/microcode: Do the family check first\n  x86/mm: Flush more aggressively in lazy TLB mode\n  x86/apic: Update TSC_DEADLINE quirk with additional SKX stepping\n  x86/apic: Silence \"FW_BUG TSC_DEADLINE disabled due to Errata\" on hypervisors\n  x86/mm: Disable various instrumentations of mm/mem_encrypt.c and mm/tlb.c\n  x86/hyperv: Fix hypercalls with extended CPU ranges for TLB flushing\n  x86/hyperv: Don't use percpu areas for pcpu_flush/pcpu_flush_ex structures\n  x86/hyperv: Clear vCPU banks between calls to avoid flushing unneeded vCPUs\n  x86/unwind: Disable unwinder warnings on 32-bit\n  x86/unwind: Align stack pointer in unwinder dump\n  x86/unwind: Use MSB for frame pointer encoding on 32-bit\n  x86/unwind: Fix dereference of untrusted pointer\n  x86/alternatives: Fix alt_max_short macro to really be a max()\n  x86/mm/64: Fix reboot interaction with CR4.PCIDE\n  kprobes/x86: Remove IRQ disabling from jprobe handlers\n  kprobes/x86: Set up frame pointer in kprobe trampoline","tree":{"sha":"6c3e69c8d4d62f567e7b9fadfc8226a15431850e","url":"https://api.github.com/repos/torvalds/linux/git/trees/6c3e69c8d4d62f567e7b9fadfc8226a15431850e"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/e7a36a6ec9cf1b60273e48ee980b8920f333bd4d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/e7a36a6ec9cf1b60273e48ee980b8920f333bd4d","html_url":"https://github.com/torvalds/linux/commit/e7a36a6ec9cf1b60273e48ee980b8920f333bd4d","comments_url":"https://api.github.com/repos/torvalds/linux/commits/e7a36a6ec9cf1b60273e48ee980b8920f333bd4d/comments","author":"1024025","committer":"1024025","parents":[{"sha":"a339b351304d5e6b02c7cf8eed895d181e64bce0","url":"https://api.github.com/repos/torvalds/linux/commits/a339b351304d5e6b02c7cf8eed895d181e64bce0","html_url":"https://github.com/torvalds/linux/commit/a339b351304d5e6b02c7cf8eed895d181e64bce0"},{"sha":"1f161f67a272cc4f29f27934dd3f74cb657eb5c4","url":"https://api.github.com/repos/torvalds/linux/commits/1f161f67a272cc4f29f27934dd3f74cb657eb5c4","html_url":"https://github.com/torvalds/linux/commit/1f161f67a272cc4f29f27934dd3f74cb657eb5c4"}]},{"sha":"a339b351304d5e6b02c7cf8eed895d181e64bce0","commit":{"message":"Merge branch 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull scheduler fixes from Ingo Molnar:\n \"Three fixes that address an SMP balancing performance regression\"\n\n* 'sched-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  sched/core: Ensure load_balance() respects the active_mask\n  sched/core: Address more wake_affine() regressions\n  sched/core: Fix wake_affine() performance regression","tree":{"sha":"5335b3fd01a73ddf9f9edaadbc67fdae91b3f7e2","url":"https://api.github.com/repos/torvalds/linux/git/trees/5335b3fd01a73ddf9f9edaadbc67fdae91b3f7e2"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/a339b351304d5e6b02c7cf8eed895d181e64bce0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/a339b351304d5e6b02c7cf8eed895d181e64bce0","html_url":"https://github.com/torvalds/linux/commit/a339b351304d5e6b02c7cf8eed895d181e64bce0","comments_url":"https://api.github.com/repos/torvalds/linux/commits/a339b351304d5e6b02c7cf8eed895d181e64bce0/comments","author":"1024025","committer":"1024025","parents":[{"sha":"7b764cedcb1a04e795795dd0fa38570467583be3","url":"https://api.github.com/repos/torvalds/linux/commits/7b764cedcb1a04e795795dd0fa38570467583be3","html_url":"https://github.com/torvalds/linux/commit/7b764cedcb1a04e795795dd0fa38570467583be3"},{"sha":"024c9d2faebdad3fb43fe49ad68e91a36190f1e2","url":"https://api.github.com/repos/torvalds/linux/commits/024c9d2faebdad3fb43fe49ad68e91a36190f1e2","html_url":"https://github.com/torvalds/linux/commit/024c9d2faebdad3fb43fe49ad68e91a36190f1e2"}]},{"sha":"7b764cedcb1a04e795795dd0fa38570467583be3","commit":{"message":"Merge branch 'ras-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull RAS fixes from Ingo Molnar:\n \"A boot parameter fix, plus a header export fix\"\n\n* 'ras-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/mce: Hide mca_cfg\n  RAS/CEC: Use the right length for \"cec_disable\"","tree":{"sha":"e50d5e6d1dd212e852f148e8f058d157e9c52dd7","url":"https://api.github.com/repos/torvalds/linux/git/trees/e50d5e6d1dd212e852f148e8f058d157e9c52dd7"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/7b764cedcb1a04e795795dd0fa38570467583be3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/7b764cedcb1a04e795795dd0fa38570467583be3","html_url":"https://github.com/torvalds/linux/commit/7b764cedcb1a04e795795dd0fa38570467583be3","comments_url":"https://api.github.com/repos/torvalds/linux/commits/7b764cedcb1a04e795795dd0fa38570467583be3/comments","author":"1024025","committer":"1024025","parents":[{"sha":"26c923ab196601011b6dd51088f47ed840e7b666","url":"https://api.github.com/repos/torvalds/linux/commits/26c923ab196601011b6dd51088f47ed840e7b666","html_url":"https://github.com/torvalds/linux/commit/26c923ab196601011b6dd51088f47ed840e7b666"},{"sha":"262e681183ddcdb24d64a2f993e41a226adcec29","url":"https://api.github.com/repos/torvalds/linux/commits/262e681183ddcdb24d64a2f993e41a226adcec29","html_url":"https://github.com/torvalds/linux/commit/262e681183ddcdb24d64a2f993e41a226adcec29"}]},{"sha":"26c923ab196601011b6dd51088f47ed840e7b666","commit":{"message":"Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Ingo Molnar:\n \"Some tooling fixes plus three kernel fixes: a memory leak fix, a\n  statistics fix and a crash fix\"\n\n* 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/x86/intel/uncore: Fix memory leaks on allocation failures\n  perf/core: Fix cgroup time when scheduling descendants\n  perf/core: Avoid freeing static PMU contexts when PMU is unregistered\n  tools include uapi bpf.h: Sync kernel ABI header with tooling header\n  perf pmu: Unbreak perf record for arm/arm64 with events with explicit PMU\n  perf script: Add missing separator for \"-F ip,brstack\" (and brstackoff)\n  perf callchain: Compare dsos (as well) for CCKEY_FUNCTION","tree":{"sha":"0781b1ae1e97ecf11cd81d0973bd815db20a1c4b","url":"https://api.github.com/repos/torvalds/linux/git/trees/0781b1ae1e97ecf11cd81d0973bd815db20a1c4b"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/26c923ab196601011b6dd51088f47ed840e7b666","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/26c923ab196601011b6dd51088f47ed840e7b666","html_url":"https://github.com/torvalds/linux/commit/26c923ab196601011b6dd51088f47ed840e7b666","comments_url":"https://api.github.com/repos/torvalds/linux/commits/26c923ab196601011b6dd51088f47ed840e7b666/comments","author":"1024025","committer":"1024025","parents":[{"sha":"60a6ca6c943bee3c76b5905e66d5fcd83ae8d34f","url":"https://api.github.com/repos/torvalds/linux/commits/60a6ca6c943bee3c76b5905e66d5fcd83ae8d34f","html_url":"https://github.com/torvalds/linux/commit/60a6ca6c943bee3c76b5905e66d5fcd83ae8d34f"},{"sha":"47a74bdcbfeff543f706dc0e385eebbb5d655ed2","url":"https://api.github.com/repos/torvalds/linux/commits/47a74bdcbfeff543f706dc0e385eebbb5d655ed2","html_url":"https://github.com/torvalds/linux/commit/47a74bdcbfeff543f706dc0e385eebbb5d655ed2"}]},{"sha":"60a6ca6c943bee3c76b5905e66d5fcd83ae8d34f","commit":{"message":"Merge branch 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull locking fixes from Ingo Molnar:\n \"Two lockdep fixes for bugs introduced by the cross-release dependency\n  tracking feature - plus a commit that disables it because performance\n  regressed in an absymal fashion on some systems\"\n\n* 'locking-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  locking/lockdep: Disable cross-release features for now\n  locking/selftest: Avoid false BUG report\n  locking/lockdep: Fix stacktrace mess","tree":{"sha":"d9e96036c963ace769577e3ebf6af76fafcc8948","url":"https://api.github.com/repos/torvalds/linux/git/trees/d9e96036c963ace769577e3ebf6af76fafcc8948"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/60a6ca6c943bee3c76b5905e66d5fcd83ae8d34f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/60a6ca6c943bee3c76b5905e66d5fcd83ae8d34f","html_url":"https://github.com/torvalds/linux/commit/60a6ca6c943bee3c76b5905e66d5fcd83ae8d34f","comments_url":"https://api.github.com/repos/torvalds/linux/commits/60a6ca6c943bee3c76b5905e66d5fcd83ae8d34f/comments","author":"1024025","committer":"1024025","parents":[{"sha":"2b34218e893a0ff39f6f46517cb5df2f990db8c0","url":"https://api.github.com/repos/torvalds/linux/commits/2b34218e893a0ff39f6f46517cb5df2f990db8c0","html_url":"https://github.com/torvalds/linux/commit/2b34218e893a0ff39f6f46517cb5df2f990db8c0"},{"sha":"b483cf3bc249d7af706390efa63d6671e80d1c09","url":"https://api.github.com/repos/torvalds/linux/commits/b483cf3bc249d7af706390efa63d6671e80d1c09","html_url":"https://github.com/torvalds/linux/commit/b483cf3bc249d7af706390efa63d6671e80d1c09"}]},{"sha":"2b34218e893a0ff39f6f46517cb5df2f990db8c0","commit":{"message":"Merge branch 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Ingo Molnar:\n \"A CPU hotplug related fix, plus two related sanity checks\"\n\n* 'irq-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  genirq/cpuhotplug: Enforce affinity setting on startup of managed irqs\n  genirq/cpuhotplug: Add sanity check for effective affinity mask\n  genirq: Warn when effective affinity is not updated","tree":{"sha":"cff6b92ae5935927f91609ee800dea3f66bc27b8","url":"https://api.github.com/repos/torvalds/linux/git/trees/cff6b92ae5935927f91609ee800dea3f66bc27b8"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/2b34218e893a0ff39f6f46517cb5df2f990db8c0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/2b34218e893a0ff39f6f46517cb5df2f990db8c0","html_url":"https://github.com/torvalds/linux/commit/2b34218e893a0ff39f6f46517cb5df2f990db8c0","comments_url":"https://api.github.com/repos/torvalds/linux/commits/2b34218e893a0ff39f6f46517cb5df2f990db8c0/comments","author":"1024025","committer":"1024025","parents":[{"sha":"a515d05e96eed14550cbeca08cb9e38dc95b5922","url":"https://api.github.com/repos/torvalds/linux/commits/a515d05e96eed14550cbeca08cb9e38dc95b5922","html_url":"https://github.com/torvalds/linux/commit/a515d05e96eed14550cbeca08cb9e38dc95b5922"},{"sha":"e43b3b58548051f8809391eb7bec7a27ed3003ea","url":"https://api.github.com/repos/torvalds/linux/commits/e43b3b58548051f8809391eb7bec7a27ed3003ea","html_url":"https://github.com/torvalds/linux/commit/e43b3b58548051f8809391eb7bec7a27ed3003ea"}]},{"sha":"a515d05e96eed14550cbeca08cb9e38dc95b5922","commit":{"message":"Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull objtool fix from Ingo Molnar:\n \"A single objtool fix: avoid silently broken ORC debuginfo builds and\n  error out instead\"\n\n* 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  objtool: Upgrade libelf-devel warning to error for CONFIG_ORC_UNWINDER","tree":{"sha":"900e91455d2b61b23b1a6c6a5f5c23b233e77905","url":"https://api.github.com/repos/torvalds/linux/git/trees/900e91455d2b61b23b1a6c6a5f5c23b233e77905"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/a515d05e96eed14550cbeca08cb9e38dc95b5922","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/a515d05e96eed14550cbeca08cb9e38dc95b5922","html_url":"https://github.com/torvalds/linux/commit/a515d05e96eed14550cbeca08cb9e38dc95b5922","comments_url":"https://api.github.com/repos/torvalds/linux/commits/a515d05e96eed14550cbeca08cb9e38dc95b5922/comments","author":"1024025","committer":"1024025","parents":[{"sha":"be1f16ba35d97aff4d85c0daba0a02da51b7c83c","url":"https://api.github.com/repos/torvalds/linux/commits/be1f16ba35d97aff4d85c0daba0a02da51b7c83c","html_url":"https://github.com/torvalds/linux/commit/be1f16ba35d97aff4d85c0daba0a02da51b7c83c"},{"sha":"3dd40cb320fee7c23b574ab821ce140ccd1281c9","url":"https://api.github.com/repos/torvalds/linux/commits/3dd40cb320fee7c23b574ab821ce140ccd1281c9","html_url":"https://github.com/torvalds/linux/commit/3dd40cb320fee7c23b574ab821ce140ccd1281c9"}]},{"sha":"1f161f67a272cc4f29f27934dd3f74cb657eb5c4","commit":{"message":"x86/microcode: Do the family check first\n\nOn CPUs like AMD's Geode, for example, we shouldn't even try to load\nmicrocode because they do not support the modern microcode loading\ninterface.\n\nHowever, we do the family check *after* the other checks whether the\nloader has been disabled on the command line or whether we're running in\na guest.\n\nSo move the family checks first in order to exit early if we're being\nloaded on an unsupported family.\n\nReported-and-tested-by: Sven Glodowski <glodi1@arcor.de>\nSigned-off-by: Borislav Petkov <bp@suse.de>\nCc: <stable@vger.kernel.org> # 4.11..\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nLink: http://bugzilla.suse.com/show_bug.cgi?id=1061396\nLink: http://lkml.kernel.org/r/20171012112316.977-1-bp@alien8.de\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","tree":{"sha":"96b6ed193be5696b37ed9f012aa275155681713c","url":"https://api.github.com/repos/torvalds/linux/git/trees/96b6ed193be5696b37ed9f012aa275155681713c"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/1f161f67a272cc4f29f27934dd3f74cb657eb5c4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/1f161f67a272cc4f29f27934dd3f74cb657eb5c4","html_url":"https://github.com/torvalds/linux/commit/1f161f67a272cc4f29f27934dd3f74cb657eb5c4","comments_url":"https://api.github.com/repos/torvalds/linux/commits/1f161f67a272cc4f29f27934dd3f74cb657eb5c4/comments","author":null,"committer":null,"parents":[{"sha":"b956575bed91ecfb136a8300742ecbbf451471ab","url":"https://api.github.com/repos/torvalds/linux/commits/b956575bed91ecfb136a8300742ecbbf451471ab","html_url":"https://github.com/torvalds/linux/commit/b956575bed91ecfb136a8300742ecbbf451471ab"}]},{"sha":"b483cf3bc249d7af706390efa63d6671e80d1c09","commit":{"message":"locking/lockdep: Disable cross-release features for now\n\nJohan Hovold reported a big lockdep slowdown on his system, caused by lockdep:\n\n> I had noticed that the BeagleBone Black boot time appeared to have\n> increased significantly with 4.14 and yesterday I finally had time to\n> investigate it.\n>\n> Boot time (from \"Linux version\" to login prompt) had in fact doubled\n> since 4.13 where it took 17 seconds (with my current config) compared to\n> the 35 seconds I now see with 4.14-rc4.\n>\n> I quick bisect pointed to lockdep and specifically the following commit:\n>\n>\t28a903f63ec0 (\"locking/lockdep: Handle non(or multi)-acquisition of a crosslock\")\n\nBecause the final v4.14 release is close, disable the cross-release lockdep\nfeatures for now.\n\nBisected-by: Johan Hovold <johan@kernel.org>\nDebugged-by: Johan Hovold <johan@kernel.org>\nReported-by: Johan Hovold <johan@kernel.org>\nCc: Arnd Bergmann <arnd@arndb.de>\nCc: Byungchul Park <byungchul.park@lge.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Tony Lindgren <tony@atomide.com>\nCc: kernel-team@lge.com\nCc: linux-arm-kernel@lists.infradead.org\nCc: linux-mm@kvack.org\nCc: linux-omap@vger.kernel.org\nLink: http://lkml.kernel.org/r/20171014072659.f2yr6mhm5ha3eou7@gmail.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","tree":{"sha":"38c2cbb6e3dd37a8ce37d72da96755c504478a20","url":"https://api.github.com/repos/torvalds/linux/git/trees/38c2cbb6e3dd37a8ce37d72da96755c504478a20"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/b483cf3bc249d7af706390efa63d6671e80d1c09","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/b483cf3bc249d7af706390efa63d6671e80d1c09","html_url":"https://github.com/torvalds/linux/commit/b483cf3bc249d7af706390efa63d6671e80d1c09","comments_url":"https://api.github.com/repos/torvalds/linux/commits/b483cf3bc249d7af706390efa63d6671e80d1c09/comments","author":null,"committer":null,"parents":[{"sha":"c7e2f69d3ed2e56de1f5eaaf37c0f5f91d7adb0a","url":"https://api.github.com/repos/torvalds/linux/commits/c7e2f69d3ed2e56de1f5eaaf37c0f5f91d7adb0a","html_url":"https://github.com/torvalds/linux/commit/c7e2f69d3ed2e56de1f5eaaf37c0f5f91d7adb0a"}]},{"sha":"be1f16ba35d97aff4d85c0daba0a02da51b7c83c","commit":{"message":"Merge branch '4.14-fixes' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus\n\nPull MIPS fixes from Ralf Baechle:\n \"More MIPS fixes for 4.14:\n\n   - Loongson 1: Set the default number of RX and TX queues to\n     accomodate for recent changes of stmmac driver.\n\n   - BPF: Fix uninitialised target compiler error.\n\n   - Fix cmpxchg on 32 bit signed ints for 64 bit kernels with\n     !kernel_uses_llsc\n\n   - Fix generic-board-config.sh for builds using O=\n\n   - Remove pr_err() calls from fpu_emu() for a case which is not a\n     kernel error\"\n\n* '4.14-fixes' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:\n  MIPS: math-emu: Remove pr_err() calls from fpu_emu()\n  MIPS: Fix generic-board-config.sh for builds using O=\n  MIPS: Fix cmpxchg on 32b signed ints for 64b kernel with !kernel_uses_llsc\n  MIPS: loongson1: set default number of rx and tx queues for stmmac\n  MIPS: bpf: Fix uninitialised target compiler error","tree":{"sha":"d56c1d021313e24973b828c8a112ae3da1878b56","url":"https://api.github.com/repos/torvalds/linux/git/trees/d56c1d021313e24973b828c8a112ae3da1878b56"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/be1f16ba35d97aff4d85c0daba0a02da51b7c83c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/be1f16ba35d97aff4d85c0daba0a02da51b7c83c","html_url":"https://github.com/torvalds/linux/commit/be1f16ba35d97aff4d85c0daba0a02da51b7c83c","comments_url":"https://api.github.com/repos/torvalds/linux/commits/be1f16ba35d97aff4d85c0daba0a02da51b7c83c/comments","author":"1024025","committer":"1024025","parents":[{"sha":"9aa0d2dde6ebd14e9d16e28081a24721d5b41cc8","url":"https://api.github.com/repos/torvalds/linux/commits/9aa0d2dde6ebd14e9d16e28081a24721d5b41cc8","html_url":"https://github.com/torvalds/linux/commit/9aa0d2dde6ebd14e9d16e28081a24721d5b41cc8"},{"sha":"ca8eb05b5f332a9e1ab3e2ece498d49f4d683470","url":"https://api.github.com/repos/torvalds/linux/commits/ca8eb05b5f332a9e1ab3e2ece498d49f4d683470","html_url":"https://github.com/torvalds/linux/commit/ca8eb05b5f332a9e1ab3e2ece498d49f4d683470"}]},{"sha":"b956575bed91ecfb136a8300742ecbbf451471ab","commit":{"message":"x86/mm: Flush more aggressively in lazy TLB mode\n\nSince commit:\n\n  94b1b03b519b (\"x86/mm: Rework lazy TLB mode and TLB freshness tracking\")\n\nx86's lazy TLB mode has been all the way lazy: when running a kernel thread\n(including the idle thread), the kernel keeps using the last user mm's\npage tables without attempting to maintain user TLB coherence at all.\n\nFrom a pure semantic perspective, this is fine -- kernel threads won't\nattempt to access user pages, so having stale TLB entries doesn't matter.\n\nUnfortunately, I forgot about a subtlety.  By skipping TLB flushes,\nwe also allow any paging-structure caches that may exist on the CPU\nto become incoherent.  This means that we can have a\npaging-structure cache entry that references a freed page table, and\nthe CPU is within its rights to do a speculative page walk starting\nat the freed page table.\n\nI can imagine this causing two different problems:\n\n - A speculative page walk starting from a bogus page table could read\n   IO addresses.  I haven't seen any reports of this causing problems.\n\n - A speculative page walk that involves a bogus page table can install\n   garbage in the TLB.  Such garbage would always be at a user VA, but\n   some AMD CPUs have logic that triggers a machine check when it notices\n   these bogus entries.  I've seen a couple reports of this.\n\nBoris further explains the failure mode:\n\n> It is actually more of an optimization which assumes that paging-structure\n> entries are in WB DRAM:\n>\n> \"TlbCacheDis: cacheable memory disable. Read-write. 0=Enables\n> performance optimization that assumes PML4, PDP, PDE, and PTE entries\n> are in cacheable WB-DRAM; memory type checks may be bypassed, and\n> addresses outside of WB-DRAM may result in undefined behavior or NB\n> protocol errors. 1=Disables performance optimization and allows PML4,\n> PDP, PDE and PTE entries to be in any memory type. Operating systems\n> that maintain page tables in memory types other than WB- DRAM must set\n> TlbCacheDis to insure proper operation.\"\n>\n> The MCE generated is an NB protocol error to signal that\n>\n> \"Link: A specific coherent-only packet from a CPU was issued to an\n> IO link. This may be caused by software which addresses page table\n> structures in a memory type other than cacheable WB-DRAM without\n> properly configuring MSRC001_0015[TlbCacheDis]. This may occur, for\n> example, when page table structure addresses are above top of memory. In\n> such cases, the NB will generate an MCE if it sees a mismatch between\n> the memory operation generated by the core and the link type.\"\n>\n> I'm assuming coherent-only packets don't go out on IO links, thus the\n> error.\n\nTo fix this, reinstate TLB coherence in lazy mode.  With this patch\napplied, we do it in one of two ways:\n\n - If we have PCID, we simply switch back to init_mm's page tables\n   when we enter a kernel thread -- this seems to be quite cheap\n   except for the cost of serializing the CPU.\n\n - If we don't have PCID, then we set a flag and switch to init_mm\n   the first time we would otherwise need to flush the TLB.\n\nThe /sys/kernel/debug/x86/tlb_use_lazy_mode debug switch can be changed\nto override the default mode for benchmarking.\n\nIn theory, we could optimize this better by only flushing the TLB in\nlazy CPUs when a page table is freed.  Doing that would require\nauditing the mm code to make sure that all page table freeing goes\nthrough tlb_remove_page() as well as reworking some data structures\nto implement the improved flush logic.\n\nReported-by: Markus Trippelsdorf <markus@trippelsdorf.de>\nReported-by: Adam Borowski <kilobyte@angband.pl>\nSigned-off-by: Andy Lutomirski <luto@kernel.org>\nSigned-off-by: Borislav Petkov <bp@suse.de>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Eric Biggers <ebiggers@google.com>\nCc: Johannes Hirte <johannes.hirte@datenkhaos.de>\nCc: Kees Cook <keescook@chromium.org>\nCc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Nadav Amit <nadav.amit@gmail.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Rik van Riel <riel@redhat.com>\nCc: Roman Kagan <rkagan@virtuozzo.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nFixes: 94b1b03b519b (\"x86/mm: Rework lazy TLB mode and TLB freshness tracking\")\nLink: http://lkml.kernel.org/r/20171009170231.fkpraqokz6e4zeco@pd.tnic\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","tree":{"sha":"a32c32334f11a31573ffa9b0e335e65948cfb4cc","url":"https://api.github.com/repos/torvalds/linux/git/trees/a32c32334f11a31573ffa9b0e335e65948cfb4cc"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/b956575bed91ecfb136a8300742ecbbf451471ab","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/b956575bed91ecfb136a8300742ecbbf451471ab","html_url":"https://github.com/torvalds/linux/commit/b956575bed91ecfb136a8300742ecbbf451471ab","comments_url":"https://api.github.com/repos/torvalds/linux/commits/b956575bed91ecfb136a8300742ecbbf451471ab/comments","author":null,"committer":null,"parents":[{"sha":"616dd5872e52493863b0202632703eebd51243dc","url":"https://api.github.com/repos/torvalds/linux/commits/616dd5872e52493863b0202632703eebd51243dc","html_url":"https://github.com/torvalds/linux/commit/616dd5872e52493863b0202632703eebd51243dc"}]},{"sha":"9aa0d2dde6ebd14e9d16e28081a24721d5b41cc8","commit":{"message":"Merge tag 'drm-fixes-for-v4.14-rc5' of git://people.freedesktop.org/~airlied/linux\n\nPull drm fixes from Dave Airlie:\n \"Couple of the arm people seem to wake up so this has imx and msm\n  fixes, along with a bunch of i915 stable bounds fixes and an amdgpu\n  regression fix.\n\n  All seems pretty okay for now\"\n\n* tag 'drm-fixes-for-v4.14-rc5' of git://people.freedesktop.org/~airlied/linux:\n  drm/msm: fix _NO_IMPLICIT fencing case\n  drm/msm: fix error path cleanup\n  drm/msm/mdp5: Remove extra pm_runtime_put call in mdp5_crtc_cursor_set()\n  drm/msm/dsi: Use correct pm_runtime_put variant during host_init\n  drm/msm: fix return value check in _msm_gem_kernel_new()\n  drm/msm: use proper memory barriers for updating tail/head\n  drm/msm/mdp5: add missing max size for 8x74 v1\n  drm/amdgpu: fix placement flags in amdgpu_ttm_bind\n  drm/i915/bios: parse DDI ports also for CHV for HDMI DDC pin and DP AUX channel\n  gpu: ipu-v3: pre: implement workaround for ERR009624\n  gpu: ipu-v3: prg: wait for double buffers to be filled on channel startup\n  gpu: ipu-v3: Allow channel burst locking on i.MX6 only\n  drm/i915: Read timings from the correct transcoder in intel_crtc_mode_get()\n  drm/i915: Order two completing nop_submit_request\n  drm/i915: Silence compiler warning for hsw_power_well_enable()\n  drm/i915: Use crtc_state_is_legacy_gamma in intel_color_check\n  drm/i915/edp: Increase the T12 delay quirk to 1300ms\n  drm/i915/edp: Get the Panel Power Off timestamp after panel is off\n  sync_file: Return consistent status in SYNC_IOC_FILE_INFO\n  drm/atomic: Unref duplicated drm_atomic_state in drm_atomic_helper_resume()","tree":{"sha":"643d0c8355939ea6a5755b72b1028474ace565c1","url":"https://api.github.com/repos/torvalds/linux/git/trees/643d0c8355939ea6a5755b72b1028474ace565c1"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/9aa0d2dde6ebd14e9d16e28081a24721d5b41cc8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/9aa0d2dde6ebd14e9d16e28081a24721d5b41cc8","html_url":"https://github.com/torvalds/linux/commit/9aa0d2dde6ebd14e9d16e28081a24721d5b41cc8","comments_url":"https://api.github.com/repos/torvalds/linux/commits/9aa0d2dde6ebd14e9d16e28081a24721d5b41cc8/comments","author":"1024025","committer":"1024025","parents":[{"sha":"06d97c58f65cc747573a3fa8569cca0169e5096e","url":"https://api.github.com/repos/torvalds/linux/commits/06d97c58f65cc747573a3fa8569cca0169e5096e","html_url":"https://github.com/torvalds/linux/commit/06d97c58f65cc747573a3fa8569cca0169e5096e"},{"sha":"a480f30846d19b50106b3243d9d48683d2966249","url":"https://api.github.com/repos/torvalds/linux/commits/a480f30846d19b50106b3243d9d48683d2966249","html_url":"https://github.com/torvalds/linux/commit/a480f30846d19b50106b3243d9d48683d2966249"}]},{"sha":"a480f30846d19b50106b3243d9d48683d2966249","commit":{"message":"Merge tag 'drm-intel-fixes-2017-10-11' of git://anongit.freedesktop.org/drm/drm-intel into drm-fixes\n\ndrm/i915 fixes for 4.14-rc5:\n\nThree fixes for stable:\n\n- Use crtc_state_is_legacy_gamma in intel_color_check (Maarten)\n- Read timings from the correct transcoder (Ville).\n- Fix HDMI on BSW (Jani).\n\nOther fixes:\n\n- eDP fixes (Manasi)\n- Silence compiler warnings (Chris)\n- Order two completing nop_submit_request (Chris)\n\n* tag 'drm-intel-fixes-2017-10-11' of git://anongit.freedesktop.org/drm/drm-intel:\n  drm/i915/bios: parse DDI ports also for CHV for HDMI DDC pin and DP AUX channel\n  drm/i915: Read timings from the correct transcoder in intel_crtc_mode_get()\n  drm/i915: Order two completing nop_submit_request\n  drm/i915: Silence compiler warning for hsw_power_well_enable()\n  drm/i915: Use crtc_state_is_legacy_gamma in intel_color_check\n  drm/i915/edp: Increase the T12 delay quirk to 1300ms\n  drm/i915/edp: Get the Panel Power Off timestamp after panel is off","tree":{"sha":"8241278c2f068d806dc9e9d7e28842239fe0738c","url":"https://api.github.com/repos/torvalds/linux/git/trees/8241278c2f068d806dc9e9d7e28842239fe0738c"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/a480f30846d19b50106b3243d9d48683d2966249","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/a480f30846d19b50106b3243d9d48683d2966249","html_url":"https://github.com/torvalds/linux/commit/a480f30846d19b50106b3243d9d48683d2966249","comments_url":"https://api.github.com/repos/torvalds/linux/commits/a480f30846d19b50106b3243d9d48683d2966249/comments","author":null,"committer":null,"parents":[{"sha":"7a5bea77b1494f048028037e116ba91c9a7d2822","url":"https://api.github.com/repos/torvalds/linux/commits/7a5bea77b1494f048028037e116ba91c9a7d2822","html_url":"https://github.com/torvalds/linux/commit/7a5bea77b1494f048028037e116ba91c9a7d2822"},{"sha":"ea850f64c2722278f150dc11de2141baeb24211c","url":"https://api.github.com/repos/torvalds/linux/commits/ea850f64c2722278f150dc11de2141baeb24211c","html_url":"https://github.com/torvalds/linux/commit/ea850f64c2722278f150dc11de2141baeb24211c"}]},{"sha":"7a5bea77b1494f048028037e116ba91c9a7d2822","commit":{"message":"Merge branch 'msm-fixes-4.14-rc4' of git://people.freedesktop.org/~robclark/linux into drm-fixes\n\nbunch of msm fixes\n\n* 'msm-fixes-4.14-rc4' of git://people.freedesktop.org/~robclark/linux:\n  drm/msm: fix _NO_IMPLICIT fencing case\n  drm/msm: fix error path cleanup\n  drm/msm/mdp5: Remove extra pm_runtime_put call in mdp5_crtc_cursor_set()\n  drm/msm/dsi: Use correct pm_runtime_put variant during host_init\n  drm/msm: fix return value check in _msm_gem_kernel_new()\n  drm/msm: use proper memory barriers for updating tail/head\n  drm/msm/mdp5: add missing max size for 8x74 v1","tree":{"sha":"d5d49800179f95e234bc955acec9954e278acfec","url":"https://api.github.com/repos/torvalds/linux/git/trees/d5d49800179f95e234bc955acec9954e278acfec"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/7a5bea77b1494f048028037e116ba91c9a7d2822","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/7a5bea77b1494f048028037e116ba91c9a7d2822","html_url":"https://github.com/torvalds/linux/commit/7a5bea77b1494f048028037e116ba91c9a7d2822","comments_url":"https://api.github.com/repos/torvalds/linux/commits/7a5bea77b1494f048028037e116ba91c9a7d2822/comments","author":null,"committer":null,"parents":[{"sha":"a6402e80fa655bdc68d66784054cb4e65376b82f","url":"https://api.github.com/repos/torvalds/linux/commits/a6402e80fa655bdc68d66784054cb4e65376b82f","html_url":"https://github.com/torvalds/linux/commit/a6402e80fa655bdc68d66784054cb4e65376b82f"},{"sha":"06451a3d1d777141dedfa947649cbb0c594ac3af","url":"https://api.github.com/repos/torvalds/linux/commits/06451a3d1d777141dedfa947649cbb0c594ac3af","html_url":"https://github.com/torvalds/linux/commit/06451a3d1d777141dedfa947649cbb0c594ac3af"}]},{"sha":"06d97c58f65cc747573a3fa8569cca0169e5096e","commit":{"message":"Merge branch 'akpm' (patches from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"18 fixes\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  mm, swap: use page-cluster as max window of VMA based swap readahead\n  mm: page_vma_mapped: ensure pmd is loaded with READ_ONCE outside of lock\n  kmemleak: clear stale pointers from task stacks\n  fs/binfmt_misc.c: node could be NULL when evicting inode\n  fs/mpage.c: fix mpage_writepage() for pages with buffers\n  linux/kernel.h: add/correct kernel-doc notation\n  tty: fall back to N_NULL if switching to N_TTY fails during hangup\n  Revert \"vmalloc: back off when the current task is killed\"\n  mm/cma.c: take __GFP_NOWARN into account in cma_alloc()\n  scripts/kallsyms.c: ignore symbol type 'n'\n  userfaultfd: selftest: exercise -EEXIST only in background transfer\n  mm: only display online cpus of the numa node\n  mm: remove unnecessary WARN_ONCE in page_vma_mapped_walk().\n  mm/mempolicy: fix NUMA_INTERLEAVE_HIT counter\n  include/linux/of.h: provide of_n_{addr,size}_cells wrappers for !CONFIG_OF\n  mm/madvise.c: add description for MADV_WIPEONFORK and MADV_KEEPONFORK\n  lib/Kconfig.debug: kernel hacking menu: runtime testing: keep tests together\n  mm/migrate: fix indexing bug (off by one) and avoid out of bound access","tree":{"sha":"f8379d122eb8e49cface843dc594baef3ceae48e","url":"https://api.github.com/repos/torvalds/linux/git/trees/f8379d122eb8e49cface843dc594baef3ceae48e"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/06d97c58f65cc747573a3fa8569cca0169e5096e","comment_count":1,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/06d97c58f65cc747573a3fa8569cca0169e5096e","html_url":"https://github.com/torvalds/linux/commit/06d97c58f65cc747573a3fa8569cca0169e5096e","comments_url":"https://api.github.com/repos/torvalds/linux/commits/06d97c58f65cc747573a3fa8569cca0169e5096e/comments","author":"1024025","committer":"1024025","parents":[{"sha":"e837d9134be8018d15421546c1defd35a1bb3d06","url":"https://api.github.com/repos/torvalds/linux/commits/e837d9134be8018d15421546c1defd35a1bb3d06","html_url":"https://github.com/torvalds/linux/commit/e837d9134be8018d15421546c1defd35a1bb3d06"},{"sha":"61b639723be5a9fc4812d5d85cb769589afa5a38","url":"https://api.github.com/repos/torvalds/linux/commits/61b639723be5a9fc4812d5d85cb769589afa5a38","html_url":"https://github.com/torvalds/linux/commit/61b639723be5a9fc4812d5d85cb769589afa5a38"}]},{"sha":"61b639723be5a9fc4812d5d85cb769589afa5a38","commit":{"message":"mm, swap: use page-cluster as max window of VMA based swap readahead\n\nWhen the VMA based swap readahead was introduced, a new knob\n\n  /sys/kernel/mm/swap/vma_ra_max_order\n\nwas added as the max window of VMA swap readahead.  This is to make it\npossible to use different max window for VMA based readahead and\noriginal physical readahead.  But Minchan Kim pointed out that this will\ncause a regression because setting page-cluster sysctl to zero cannot\ndisable swap readahead with the change.\n\nTo fix the regression, the page-cluster sysctl is used as the max window\nof both the VMA based swap readahead and original physical swap\nreadahead.  If more fine grained control is needed in the future, more\nknobs can be added as the subordinate knobs of the page-cluster sysctl.\n\nThe vma_ra_max_order knob is deleted.  Because the knob was introduced\nin v4.14-rc1, and this patch is targeting being merged before v4.14\nreleasing, there should be no existing users of this newly added ABI.\n\nLink: http://lkml.kernel.org/r/20171011070847.16003-1-ying.huang@intel.com\nFixes: ec560175c0b6fce (\"mm, swap: VMA based swap readahead\")\nSigned-off-by: \"Huang, Ying\" <ying.huang@intel.com>\nReported-by: Minchan Kim <minchan@kernel.org>\nAcked-by: Minchan Kim <minchan@kernel.org>\nAcked-by: Michal Hocko <mhocko@suse.com>\nCc: Johannes Weiner <hannes@cmpxchg.org>\nCc: Rik van Riel <riel@redhat.com>\nCc: Shaohua Li <shli@kernel.org>\nCc: Hugh Dickins <hughd@google.com>\nCc: Fengguang Wu <fengguang.wu@intel.com>\nCc: Tim Chen <tim.c.chen@intel.com>\nCc: Dave Hansen <dave.hansen@intel.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"7a7b92cdaa08c84af347f9ce015f13c49b0d1971","url":"https://api.github.com/repos/torvalds/linux/git/trees/7a7b92cdaa08c84af347f9ce015f13c49b0d1971"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/61b639723be5a9fc4812d5d85cb769589afa5a38","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/61b639723be5a9fc4812d5d85cb769589afa5a38","html_url":"https://github.com/torvalds/linux/commit/61b639723be5a9fc4812d5d85cb769589afa5a38","comments_url":"https://api.github.com/repos/torvalds/linux/commits/61b639723be5a9fc4812d5d85cb769589afa5a38/comments","author":null,"committer":"1024025","parents":[{"sha":"a7b100953aa33a5bbdc3e5e7f2241b9c0704606e","url":"https://api.github.com/repos/torvalds/linux/commits/a7b100953aa33a5bbdc3e5e7f2241b9c0704606e","html_url":"https://github.com/torvalds/linux/commit/a7b100953aa33a5bbdc3e5e7f2241b9c0704606e"}]},{"sha":"a7b100953aa33a5bbdc3e5e7f2241b9c0704606e","commit":{"message":"mm: page_vma_mapped: ensure pmd is loaded with READ_ONCE outside of lock\n\nLoading the pmd without holding the pmd_lock exposes us to races with\nconcurrent updaters of the page tables but, worse still, it also allows\nthe compiler to cache the pmd value in a register and reuse it later on,\neven if we've performed a READ_ONCE in between and seen a more recent\nvalue.\n\nIn the case of page_vma_mapped_walk, this leads to the following crash\nwhen the pmd loaded for the initial pmd_trans_huge check is all zeroes\nand a subsequent valid table entry is loaded by check_pmd.  We then\nproceed into map_pte, but the compiler re-uses the zero entry inside\npte_offset_map, resulting in a junk pointer being installed in\npvmw->pte:\n\n  PC is at check_pte+0x20/0x170\n  LR is at page_vma_mapped_walk+0x2e0/0x540\n  [...]\n  Process doio (pid: 2463, stack limit = 0xffff00000f2e8000)\n  Call trace:\n    check_pte+0x20/0x170\n    page_vma_mapped_walk+0x2e0/0x540\n    page_mkclean_one+0xac/0x278\n    rmap_walk_file+0xf0/0x238\n    rmap_walk+0x64/0xa0\n    page_mkclean+0x90/0xa8\n    clear_page_dirty_for_io+0x84/0x2a8\n    mpage_submit_page+0x34/0x98\n    mpage_process_page_bufs+0x164/0x170\n    mpage_prepare_extent_to_map+0x134/0x2b8\n    ext4_writepages+0x484/0xe30\n    do_writepages+0x44/0xe8\n    __filemap_fdatawrite_range+0xbc/0x110\n    file_write_and_wait_range+0x48/0xd8\n    ext4_sync_file+0x80/0x4b8\n    vfs_fsync_range+0x64/0xc0\n    SyS_msync+0x194/0x1e8\n\nThis patch fixes the problem by ensuring that READ_ONCE is used before\nthe initial checks on the pmd, and this value is subsequently used when\nchecking whether or not the pmd is present.  pmd_check is removed and\nthe pmd_present check is inlined directly.\n\nLink: http://lkml.kernel.org/r/1507222630-5839-1-git-send-email-will.deacon@arm.com\nFixes: f27176cfc363 (\"mm: convert page_mkclean_one() to use page_vma_mapped_walk()\")\nSigned-off-by: Will Deacon <will.deacon@arm.com>\nTested-by: Yury Norov <ynorov@caviumnetworks.com>\nTested-by: Richard Ruigrok <rruigrok@codeaurora.org>\nAcked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nCc: \"Paul E. McKenney\" <paulmck@linux.vnet.ibm.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"3088c7e029b713ac2402e829bd95a68cc66eee63","url":"https://api.github.com/repos/torvalds/linux/git/trees/3088c7e029b713ac2402e829bd95a68cc66eee63"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/a7b100953aa33a5bbdc3e5e7f2241b9c0704606e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/a7b100953aa33a5bbdc3e5e7f2241b9c0704606e","html_url":"https://github.com/torvalds/linux/commit/a7b100953aa33a5bbdc3e5e7f2241b9c0704606e","comments_url":"https://api.github.com/repos/torvalds/linux/commits/a7b100953aa33a5bbdc3e5e7f2241b9c0704606e/comments","author":"8912388","committer":"1024025","parents":[{"sha":"ca182551857cc2c1e6a2b7f1e72090a137a15008","url":"https://api.github.com/repos/torvalds/linux/commits/ca182551857cc2c1e6a2b7f1e72090a137a15008","html_url":"https://github.com/torvalds/linux/commit/ca182551857cc2c1e6a2b7f1e72090a137a15008"}]},{"sha":"ca182551857cc2c1e6a2b7f1e72090a137a15008","commit":{"message":"kmemleak: clear stale pointers from task stacks\n\nKmemleak considers any pointers on task stacks as references.  This\npatch clears newly allocated and reused vmap stacks.\n\nLink: http://lkml.kernel.org/r/150728990124.744199.8403409836394318684.stgit@buzz\nSigned-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>\nAcked-by: Catalin Marinas <catalin.marinas@arm.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"2811f50f3d352d6f82f453e05a76489637b2d1b0","url":"https://api.github.com/repos/torvalds/linux/git/trees/2811f50f3d352d6f82f453e05a76489637b2d1b0"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/ca182551857cc2c1e6a2b7f1e72090a137a15008","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/ca182551857cc2c1e6a2b7f1e72090a137a15008","html_url":"https://github.com/torvalds/linux/commit/ca182551857cc2c1e6a2b7f1e72090a137a15008","comments_url":"https://api.github.com/repos/torvalds/linux/commits/ca182551857cc2c1e6a2b7f1e72090a137a15008/comments","author":"426506","committer":"1024025","parents":[{"sha":"7e86600606cef21beec725039d70377fb364f881","url":"https://api.github.com/repos/torvalds/linux/commits/7e86600606cef21beec725039d70377fb364f881","html_url":"https://github.com/torvalds/linux/commit/7e86600606cef21beec725039d70377fb364f881"}]},{"sha":"7e86600606cef21beec725039d70377fb364f881","commit":{"message":"fs/binfmt_misc.c: node could be NULL when evicting inode\n\ninode->i_private is assigned by a Node pointer only after registering a\nnew binary format, so it could be NULL if inode was created by\nbm_fill_super() (or iput() was called by the error path in\nbm_register_write()), and this could result in NULL pointer dereference\nwhen evicting such an inode.  e.g.  mount binfmt_misc filesystem then\numount it immediately:\n\n  mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc\n  umount /proc/sys/fs/binfmt_misc\n\nwill result in\n\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000013\n  IP: bm_evict_inode+0x16/0x40 [binfmt_misc]\n  ...\n  Call Trace:\n   evict+0xd3/0x1a0\n   iput+0x17d/0x1d0\n   dentry_unlink_inode+0xb9/0xf0\n   __dentry_kill+0xc7/0x170\n   shrink_dentry_list+0x122/0x280\n   shrink_dcache_parent+0x39/0x90\n   do_one_tree+0x12/0x40\n   shrink_dcache_for_umount+0x2d/0x90\n   generic_shutdown_super+0x1f/0x120\n   kill_litter_super+0x29/0x40\n   deactivate_locked_super+0x43/0x70\n   deactivate_super+0x45/0x60\n   cleanup_mnt+0x3f/0x70\n   __cleanup_mnt+0x12/0x20\n   task_work_run+0x86/0xa0\n   exit_to_usermode_loop+0x6d/0x99\n   syscall_return_slowpath+0xba/0xf0\n   entry_SYSCALL_64_fastpath+0xa3/0xa\n\nFix it by making sure Node (e) is not NULL.\n\nLink: http://lkml.kernel.org/r/20171010100642.31786-1-eguan@redhat.com\nFixes: 83f918274e4b (\"exec: binfmt_misc: shift filp_close(interp_file) from kill_node() to bm_evict_inode()\")\nSigned-off-by: Eryu Guan <eguan@redhat.com>\nAcked-by: Oleg Nesterov <oleg@redhat.com>\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"786f8c72f935ad11d3f5213b335478f4a84e5e0c","url":"https://api.github.com/repos/torvalds/linux/git/trees/786f8c72f935ad11d3f5213b335478f4a84e5e0c"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/7e86600606cef21beec725039d70377fb364f881","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/7e86600606cef21beec725039d70377fb364f881","html_url":"https://github.com/torvalds/linux/commit/7e86600606cef21beec725039d70377fb364f881","comments_url":"https://api.github.com/repos/torvalds/linux/commits/7e86600606cef21beec725039d70377fb364f881/comments","author":null,"committer":"1024025","parents":[{"sha":"f892760aa66a2d657deaf59538fb69433036767c","url":"https://api.github.com/repos/torvalds/linux/commits/f892760aa66a2d657deaf59538fb69433036767c","html_url":"https://github.com/torvalds/linux/commit/f892760aa66a2d657deaf59538fb69433036767c"}]},{"sha":"f892760aa66a2d657deaf59538fb69433036767c","commit":{"message":"fs/mpage.c: fix mpage_writepage() for pages with buffers\n\nWhen using FAT on a block device which supports rw_page, we can hit\nBUG_ON(!PageLocked(page)) in try_to_free_buffers().  This is because we\ncall clean_buffers() after unlocking the page we've written.  Introduce\na new clean_page_buffers() which cleans all buffers associated with a\npage and call it from within bdev_write_page().\n\n[akpm@linux-foundation.org: s/PAGE_SIZE/~0U/ per Linus and Matthew]\nLink: http://lkml.kernel.org/r/20171006211541.GA7409@bombadil.infradead.org\nSigned-off-by: Matthew Wilcox <mawilcox@microsoft.com>\nReported-by: Toshi Kani <toshi.kani@hpe.com>\nReported-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>\nTested-by: Toshi Kani <toshi.kani@hpe.com>\nAcked-by: Johannes Thumshirn <jthumshirn@suse.de>\nCc: Ross Zwisler <ross.zwisler@linux.intel.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"3a1cbccecb6c363e4fcc922127867ca89972e655","url":"https://api.github.com/repos/torvalds/linux/git/trees/3a1cbccecb6c363e4fcc922127867ca89972e655"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/f892760aa66a2d657deaf59538fb69433036767c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/f892760aa66a2d657deaf59538fb69433036767c","html_url":"https://github.com/torvalds/linux/commit/f892760aa66a2d657deaf59538fb69433036767c","comments_url":"https://api.github.com/repos/torvalds/linux/commits/f892760aa66a2d657deaf59538fb69433036767c/comments","author":null,"committer":"1024025","parents":[{"sha":"e8c97af0c1f23d6ffedcaa3918861f2595e1db62","url":"https://api.github.com/repos/torvalds/linux/commits/e8c97af0c1f23d6ffedcaa3918861f2595e1db62","html_url":"https://github.com/torvalds/linux/commit/e8c97af0c1f23d6ffedcaa3918861f2595e1db62"}]},{"sha":"e8c97af0c1f23d6ffedcaa3918861f2595e1db62","commit":{"message":"linux/kernel.h: add/correct kernel-doc notation\n\nAdd kernel-doc notation for some macros.  Correct kernel-doc comments &\ntypos for a few macros.\n\nLink: http://lkml.kernel.org/r/76fa1403-1511-be4c-e9c4-456b43edfad3@infradead.org\nSigned-off-by: Randy Dunlap <rdunlap@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"c748fc9c7d0c955cbc97d3314262a8b5e3ccce2f","url":"https://api.github.com/repos/torvalds/linux/git/trees/c748fc9c7d0c955cbc97d3314262a8b5e3ccce2f"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/e8c97af0c1f23d6ffedcaa3918861f2595e1db62","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/e8c97af0c1f23d6ffedcaa3918861f2595e1db62","html_url":"https://github.com/torvalds/linux/commit/e8c97af0c1f23d6ffedcaa3918861f2595e1db62","comments_url":"https://api.github.com/repos/torvalds/linux/commits/e8c97af0c1f23d6ffedcaa3918861f2595e1db62/comments","author":null,"committer":"1024025","parents":[{"sha":"e65c62b1375cbff69fa925787bcdae4b27bffb48","url":"https://api.github.com/repos/torvalds/linux/commits/e65c62b1375cbff69fa925787bcdae4b27bffb48","html_url":"https://github.com/torvalds/linux/commit/e65c62b1375cbff69fa925787bcdae4b27bffb48"}]},{"sha":"e65c62b1375cbff69fa925787bcdae4b27bffb48","commit":{"message":"tty: fall back to N_NULL if switching to N_TTY fails during hangup\n\nWe have seen NULL-pointer dereference crashes in tty->disc_data when the\nN_TTY fallback driver failed to open during hangup.  The immediate cause\nof this open to fail has been addressed in the preceding patch to\nvmalloc(), but this code could be more robust.\n\nAs Alan pointed out in commit 8a8dabf2dd68 (\"tty: handle the case where\nwe cannot restore a line discipline\"), the N_TTY driver, historically\nthe safe fallback that could never fail, can indeed fail, but the\nsurrounding code is not prepared to handle this.  To avoid crashes he\nadded a new N_NULL driver to take N_TTY's place as the last resort.\n\nHook that fallback up to the hangup path.  Update tty_ldisc_reinit() to\nreflect the reality that n_tty_open can indeed fail.\n\nLink: http://lkml.kernel.org/r/20171004185959.GC2136@cmpxchg.org\nSigned-off-by: Johannes Weiner <hannes@cmpxchg.org>\nCc: Alan Cox <alan@llwyncelyn.cymru>\nCc: Christoph Hellwig <hch@lst.de>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: Michal Hocko <mhocko@suse.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"c1669f5d423d29b4fff75f9c36bc49217a114ee9","url":"https://api.github.com/repos/torvalds/linux/git/trees/c1669f5d423d29b4fff75f9c36bc49217a114ee9"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/e65c62b1375cbff69fa925787bcdae4b27bffb48","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/e65c62b1375cbff69fa925787bcdae4b27bffb48","html_url":"https://github.com/torvalds/linux/commit/e65c62b1375cbff69fa925787bcdae4b27bffb48","comments_url":"https://api.github.com/repos/torvalds/linux/commits/e65c62b1375cbff69fa925787bcdae4b27bffb48/comments","author":"1272816","committer":"1024025","parents":[{"sha":"b8c8a338f75e052d9fa2fed851259320af412e3f","url":"https://api.github.com/repos/torvalds/linux/commits/b8c8a338f75e052d9fa2fed851259320af412e3f","html_url":"https://github.com/torvalds/linux/commit/b8c8a338f75e052d9fa2fed851259320af412e3f"}]},{"sha":"b8c8a338f75e052d9fa2fed851259320af412e3f","commit":{"message":"Revert \"vmalloc: back off when the current task is killed\"\n\nThis reverts commits 5d17a73a2ebe (\"vmalloc: back off when the current\ntask is killed\") and 171012f56127 (\"mm: don't warn when vmalloc() fails\ndue to a fatal signal\").\n\nCommit 5d17a73a2ebe (\"vmalloc: back off when the current task is\nkilled\") made all vmalloc allocations from a signal-killed task fail.\nWe have seen crashes in the tty driver from this, where a killed task\nexiting tries to switch back to N_TTY, fails n_tty_open because of the\nvmalloc failing, and later crashes when dereferencing tty->disc_data.\n\nArguably, relying on a vmalloc() call to succeed in order to properly\nexit a task is not the most robust way of doing things.  There will be a\nfollow-up patch to the tty code to fall back to the N_NULL ldisc.\n\nBut the justification to make that vmalloc() call fail like this isn't\nconvincing, either.  The patch mentions an OOM victim exhausting the\nmemory reserves and thus deadlocking the machine.  But the OOM killer is\nonly one, improbable source of fatal signals.  It doesn't make sense to\nfail allocations preemptively with plenty of memory in most cases.\n\nThe patch doesn't mention real-life instances where vmalloc sites would\nexhaust memory, which makes it sound more like a theoretical issue to\nbegin with.  But just in case, the OOM access to memory reserves has\nbeen restricted on the allocator side in cd04ae1e2dc8 (\"mm, oom: do not\nrely on TIF_MEMDIE for memory reserves access\"), which should take care\nof any theoretical concerns on that front.\n\nRevert this patch, and the follow-up that suppresses the allocation\nwarnings when we fail the allocations due to a signal.\n\nLink: http://lkml.kernel.org/r/20171004185906.GB2136@cmpxchg.org\nFixes:  171012f56127 (\"mm: don't warn when vmalloc() fails due to a fatal signal\")\nSigned-off-by: Johannes Weiner <hannes@cmpxchg.org>\nAcked-by: Vlastimil Babka <vbabka@suse.cz>\nAcked-by: Michal Hocko <mhocko@suse.com>\nCc: Alan Cox <alan@llwyncelyn.cymru>\nCc: Christoph Hellwig <hch@lst.de>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"01e07f1041a243d1bbac18cbfb14ced0d1734436","url":"https://api.github.com/repos/torvalds/linux/git/trees/01e07f1041a243d1bbac18cbfb14ced0d1734436"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/b8c8a338f75e052d9fa2fed851259320af412e3f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/b8c8a338f75e052d9fa2fed851259320af412e3f","html_url":"https://github.com/torvalds/linux/commit/b8c8a338f75e052d9fa2fed851259320af412e3f","comments_url":"https://api.github.com/repos/torvalds/linux/commits/b8c8a338f75e052d9fa2fed851259320af412e3f/comments","author":"1272816","committer":"1024025","parents":[{"sha":"ef4650144e76ae361fe4b8c9a0afcd53074cd520","url":"https://api.github.com/repos/torvalds/linux/commits/ef4650144e76ae361fe4b8c9a0afcd53074cd520","html_url":"https://github.com/torvalds/linux/commit/ef4650144e76ae361fe4b8c9a0afcd53074cd520"}]},{"sha":"ef4650144e76ae361fe4b8c9a0afcd53074cd520","commit":{"message":"mm/cma.c: take __GFP_NOWARN into account in cma_alloc()\n\ncma_alloc() unconditionally prints an INFO message when the CMA\nallocation fails.  Make this message conditional on the non-presence of\n__GFP_NOWARN in gfp_mask.\n\nThis patch aims at removing INFO messages that are displayed when the\nVC4 driver tries to allocate buffer objects.  From the driver\nperspective an allocation failure is acceptable, and the driver can\npossibly do something to make following allocation succeed (like\nflushing the VC4 internal cache).\n\nLink: http://lkml.kernel.org/r/20171004125447.15195-1-boris.brezillon@free-electrons.com\nSigned-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>\nAcked-by: Laura Abbott <labbott@redhat.com>\nCc: Jaewon Kim <jaewon31.kim@samsung.com>\nCc: David Airlie <airlied@linux.ie>\nCc: Daniel Vetter <daniel@ffwll.ch>\nCc: Eric Anholt <eric@anholt.net>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"e0bc28011b66c1eaa2373e29379992fa302280ff","url":"https://api.github.com/repos/torvalds/linux/git/trees/e0bc28011b66c1eaa2373e29379992fa302280ff"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/ef4650144e76ae361fe4b8c9a0afcd53074cd520","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/ef4650144e76ae361fe4b8c9a0afcd53074cd520","html_url":"https://github.com/torvalds/linux/commit/ef4650144e76ae361fe4b8c9a0afcd53074cd520","comments_url":"https://api.github.com/repos/torvalds/linux/commits/ef4650144e76ae361fe4b8c9a0afcd53074cd520/comments","author":"5113103","committer":"1024025","parents":[{"sha":"51962a9d437f0d580c04cd2c4abc2bd417200da2","url":"https://api.github.com/repos/torvalds/linux/commits/51962a9d437f0d580c04cd2c4abc2bd417200da2","html_url":"https://github.com/torvalds/linux/commit/51962a9d437f0d580c04cd2c4abc2bd417200da2"}]},{"sha":"51962a9d437f0d580c04cd2c4abc2bd417200da2","commit":{"message":"scripts/kallsyms.c: ignore symbol type 'n'\n\ngcc on aarch64 may emit synbols of type 'n' if the kernel is built with\n'-frecord-gcc-switches'.  In most cases, those symbols are reported with\nnm as\n\n\t000000000000000e n $d\n\nand with objdump as\n\n\t0000000000000000 l    d  .GCC.command.line\t0000000000000000 .GCC.command.line\n\t000000000000000e l       .GCC.command.line\t0000000000000000 $d\n\nThose symbols are detected in is_arm_mapping_symbol() and ignored.\nHowever, if \"--prefix-symbols=<prefix>\" is configured as well, the\nsituation is different.  For example, in efi/libstub, arm64 images are\nbuilt with\n\n\t'--prefix-alloc-sections=.init --prefix-symbols=__efistub_'.\n\nIn combination with '-frecord-gcc-switches', the symbols are now reported\nby nm as:\n\n\t000000000000000e n __efistub_$d\nand by objdump as:\n\t0000000000000000 l    d  .GCC.command.line\t0000000000000000 .GCC.command.line\n\t000000000000000e l       .GCC.command.line\t0000000000000000 __efistub_$d\n\nThose symbols are no longer ignored and included in the base address\ncalculation.  This results in a base address of 000000000000000e, which\nin turn causes kallsyms to abort with\n\n    kallsyms failure:\n\trelative symbol value 0xffffff900800a000 out of range in relative mode\n\nThe problem is seen in little endian arm64 builds with CONFIG_EFI\nenabled and with '-frecord-gcc-switches' set in KCFLAGS.\n\nExplicitly ignore symbols of type 'n' since those are clearly debug\nsymbols.\n\nLink: http://lkml.kernel.org/r/1507136063-3139-1-git-send-email-linux@roeck-us.net\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>\nAcked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>\nCc: Josh Poimboeuf <jpoimboe@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","tree":{"sha":"04b3aa33a3f8b714fd9c9112c90d9196fe97361b","url":"https://api.github.com/repos/torvalds/linux/git/trees/04b3aa33a3f8b714fd9c9112c90d9196fe97361b"},"url":"https://api.github.com/repos/torvalds/linux/git/commits/51962a9d437f0d580c04cd2c4abc2bd417200da2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/torvalds/linux/commits/51962a9d437f0d580c04cd2c4abc2bd417200da2","html_url":"https://github.com/torvalds/linux/commit/51962a9d437f0d580c04cd2c4abc2bd417200da2","comments_url":"https://api.github.com/repos/torvalds/linux/commits/51962a9d437f0d580c04cd2c4abc2bd417200da2/comments","author":"1030448","committer":"1024025","parents":[{"sha":"7ddd8faf4399ab4f4edad5604eab35f8a87caf02","url":"https://api.github.com/repos/torvalds/linux/commits/7ddd8faf4399ab4f4edad5604eab35f8a87caf02","html_url":"https://github.com/torvalds/linux/commit/7ddd8faf4399ab4f4edad5604eab35f8a87caf02"}]}]